version: '3.8'

services:
  load_balancer:
    image: haproxy
    ports:
      - "8080:8080"
    depends_on:
      - resolver
    volumes:
      - ./haproxy:/usr/local/etc/haproxy
    networks:
      - chat_network

  resolver:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - sqlite3
      - redis
    volumes:
      - .:/app
    networks:
      - chat_network

  ws1:
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "uvicorn", "app.websocket:websocket_app", "--host", "0.0.0.0", "--port", "8000" ]
    environment:
      - REDIS_CHANNEL=${REDIS_CHANNEL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - sqlite3
      - redis
    volumes:
      - .:/app
    networks:
      - chat_network

  ws2:
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "uvicorn", "app.websocket:websocket_app", "--host", "0.0.0.0", "--port", "8000" ]
    environment:
      - REDIS_CHANNEL=${REDIS_CHANNEL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - sqlite3
      - redis
    volumes:
      - .:/app
    networks:
      - chat_network

  ws3:
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "uvicorn", "app.websocket:websocket_app", "--host", "0.0.0.0", "--port", "8000" ]
    environment:
      - REDIS_CHANNEL=${REDIS_CHANNEL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - sqlite3
      - redis
    volumes:
      - .:/app
    networks:
      - chat_network

  redis:
    image: "redis:alpine"
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - chat_network

  sqlite3:
    image: nouchka/sqlite3:latest
    stdin_open: true
    tty: true
    volumes:
      - ./sqlite3_db/:/root/sqlite3_db/
    ports:
      - '9000:9000'
    restart: unless-stopped
    networks:
      - chat_network

volumes:
  sqlite3_db: null


networks:
  chat_network:
    external: false
    name: chat_network